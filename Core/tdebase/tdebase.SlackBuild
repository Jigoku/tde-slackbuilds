#!/bin/sh
# Generated by Alien's SlackBuild Toolkit: http://slackware.com/~alien/AST
# Copyright 2009, 2010, 2011, 2012, 2013, 2014, 2015  Eric Hameleers, Eindhoven, Netherlands
# Copyright 2015-2016 Thorn Inurcide thorninurcide@gmail.com
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

# Thanks to Slackware 12.2 SlackBuild for kdebase

PRGNAM=tdebase
VERSION=${VERSION:-R14.0.3}
BUILD=${BUILD:-1}
NUMJOBS=${NUMJOBS:-" -j4 "}
TAG=${TAG:-_tde}

DOCS="AUTHORS COPYING* README*"

# Where do we look for sources?
SRCDIR=$(cd $(dirname $0); pwd)

TMP=${TMP:-/tmp/build}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SOURCE="$SRCDIR/${PRGNAM}-${VERSION}.tar.bz2"
SRCURL="http://tde-mirror.yosemite.net/trinity/releases/${VERSION}/${PRGNAM}-${VERSION}.tar.bz2"

# You can use your own private machine.conf file to overrule machine defaults:
if [ -e $SRCDIR/machine.conf ]; then
  . $SRCDIR/machine.conf
elif [ -e /etc/slackbuild/machine.conf ]; then
  . /etc/slackbuild/machine.conf
else
  # Automatically determine the architecture we're building on:
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      armv7hl) export ARCH=$MARCH ;;
      armv6hl) export ARCH=$MARCH ;;
      arm*)    export ARCH=arm ;;
      # Unless $ARCH is already set, use uname -m for all other archs:
      *)       export ARCH=$MARCH ;;
    esac
  fi
  # Set CFLAGS/CXXFLAGS and LIBDIRSUFFIX:
  case "$ARCH" in
    i486)      SLKCFLAGS="-O2 -march=i486 -mtune=i686"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    x86_64)    SLKCFLAGS="-O2 -fPIC"
               SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
               ;;
    armv7hl)   SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    armv6hl)   SLKCFLAGS="-O2 -march=armv6 -mfpu=vfp -mfloat-abi=hard"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    *)         SLKCFLAGS=${SLKCFLAGS:-"O2"}
               SLKLDFLAGS=${SLKLDFLAGS:-""}; LIBDIRSUFFIX=${LIBDIRSUFFIX:-""}
               ;;
  esac
fi

case "$ARCH" in
    arm*)    TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)       TARGET=$ARCH-slackware-linux ;;
esac

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Save old umask and set to 0022:
_UMASK_=$(umask)
umask 0022

# Create working directories:
mkdir -p $OUTPUT      
mkdir -p $TMP/tmp-$PRGNAM 
mkdir -p $PKG             
rm -rf $PKG/*            
rm -rf $TMP/tmp-$PRGNAM/*
rm -rf $OUTPUT/{checkout,configure,make,install,error,makepkg,patch}-$PRGNAM.log

# Source file availability:
if ! [ -f ${SOURCE} ]; then
  echo "Source '$(basename ${SOURCE})' not available yet..."
  # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
  [ -w "$SRCDIR" ] || SOURCE="$OUTPUT/$(basename $SOURCE)"
  if [ -f ${SOURCE} ]; then echo "Ah, found it!"; continue; fi
  if ! [ "x${SRCURL}" == "x" ]; then
    echo "Will download file to $(dirname $SOURCE)"
    wget -nv -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename ${SOURCE})' not available... aborting the build."
    exit 1
  fi
fi

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

cd $TMP/tmp-$PRGNAM
echo "Extracting the source archive(s) for $PRGNAM..."
if $(file ${SOURCE} | grep -qi ": 7-zip"); then
  7za x ${SOURCE}
elif $(file ${SOURCE} | grep -qi ": zip"); then
  unzip ${SOURCE}
else
  tar -xvf ${SOURCE}
fi
cd ${PRGNAM}
chown -R root:root .
chmod -R u+w,go+r-w,a+rX-st .

mkdir -p build-${PRGNAM}
cd build-${PRGNAM}
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DMAN_INSTALL_DIR=/usr/man \
    -DSYSCONF_INSTALL_DIR=/etc \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DWITH_OPENEXR="ON" \
    -DWITH_XCOMPOSITE="ON" \
    -DWITH_XCURSOR="ON" \
    -DWITH_SUDO_TDESU_BACKEND="ON" \
    -DWITH_SUDO_KONSOLE_SUPER_USER_COMMAND="ON" \
    -DWITH_PAM="OFF" \
    -DWITH_SHADOW="ON" \
    -DWITH_XFIXES="ON" \
    -DWITH_XRANDR="ON" \
    -DWITH_XRENDER="ON" \
    -DWITH_OPENGL="ON" \
    -DWITH_XSCREENSAVER="ON" \
    -DWITH_XTEST="ON" \
    -DWITH_LIBART="ON" \
    -DWITH_LIBUSB="ON" \
    -DWITH_XDMCP="ON" \
    -DWITH_XINERAMA="ON" \
    -DWITH_ARTS="ON" \
    -DWITH_TDEHWLIB="ON" \
    -DWITH_UPOWER="ON" \
    -DWITH_PCRE="ON" \
    -DBUILD_ALL="ON" \
    -Wno-dev \
    ..
  make $NUMJOBS || exit 1
  make DESTDIR=$PKG install || exit 1
cd -

# Move the TDM files someplace FHS compliant:
mkdir -p $PKG/etc/tde
mv $PKG/usr/share/config/tdm $PKG/etc/tde
( cd $PKG/usr/share/config ; ln -sf ../../../etc/tde/tdm . )

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION || true
cat $SRCDIR/$(basename $0) > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Add xinitrc:
mkdir -p $PKG/etc/X11/xinit
cat $SRCDIR/xinitrc.tde > $PKG/etc/X11/xinit/xinitrc.tde
chmod 755 $PKG/etc/X11/xinit/xinitrc.tde

mkdir -p $PKG/etc/profile.d
cat $SRCDIR/profile.d/tde.sh > $PKG/etc/profile.d/tde.sh
cat $SRCDIR/profile.d/tde.csh > $PKG/etc/profile.d/tde.csh
chmod 755 $PKG/etc/profile.d/tde.sh $PKG/etc/profile.d/tde.csh

# Setup config files for TDM:
$PKG/usr/bin/gentdmconf --no-old --no-old-scripts --no-backup --in $PKG/usr/share/config/tdm
# Not allowing root to login at the console is just plain silly.  If they have physical access to
# the machine, what's the point of trying to stop this?  Even the tdmrc file says this is supposed
# to be the default.
cat $PKG/usr/share/config/tdm/tdmrc | perl -pi -e 's|AllowRootLogin=false|AllowRootLogin=true|' > $PKG/usr/share/config/tdm/tdmrc.new
rm -f $PKG/usr/share/config/tdm/tdmrc
cp -a $PKG/usr/share/config/tdm/Xsession $PKG/usr/share/config/tdm/Xsession.orig
cat $SRCDIR/config/Xsession > $PKG/usr/share/config/tdm/Xsession
mv $PKG/usr/share/config/tdm/backgroundrc $PKG/usr/share/config/tdm/backgroundrc.new

mkdir -p $PKG/install
cat $SRCDIR/slack-desc > $PKG/install/slack-desc
cat $SRCDIR/doinst.sh > $PKG/install/doinst.sh

cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz}
cd $OUTPUT
md5sum ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz} > ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz}.md5
cd -
cat $PKG/install/slack-desc | grep "^${PRGNAM}" > $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.txt

# Restore the original umask:
umask ${_UMASK_}
