#!/bin/sh
# Generated by Alien's SlackBuild Toolkit: http://slackware.com/~alien/AST
# Copyright 2009, 2010, 2011, 2012, 2013, 2014, 2015  Eric Hameleers, Eindhoven, Netherlands
# Copyright 2015-2016  Thorn Inurcide thorninurcide@gmail.com
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

PRGNAM=knemo
VERSION=${VERSION:-R14.0.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_tde}
PREFIX=/usr
QTDIR=""         # let configure find the tqt3 directories
# You may or may not get away with more than -j1, but mostly it just breaks the build:
NUMJOBS=${NUMJOBS:--j1}

Options()
(
## Edit or comment out as required
# rename knemo icons to avoid conflict with those in tdeartwork
rename network_ knemo_network_ src/knemod/pics/*png
sed -i -e 's|network_|knemo_network_|g' src/{knemod/interfaceicon,kcm/configdialog}.cpp
# Show 'Gateway' not 'Default Gateway' in Tooltip message box when cursor hovers over Panel icon
sed -i 's|Default Gateway" ), LINK_QUALITY|Gateway" ), GATEWAY|' src/knemod/interfacetooltip.cpp
# widen text area in Tooltips box to avoid text wrapping
sed -i 's|<tr><td>|<tr><td width=60%>|g' src/knemod/interfacetooltip.cpp
# set language to .. options are any of
# SUBDIRS= ar bg br cs cy da de el en_GB es et fr ga gl hu it ja ka lt nl pl pt pt_BR ru rw sk sr sr@Latn sv tr
# needs msgfmt - no error message given - uses bash built-in ':' otherwise
sed -i 's|SUBDIRS=.*$|SUBDIRS= de en_GB|' translations/Makefile.am
)

SlackDesc()
(
echo "
# HOW TO EDIT THIS FILE:
# The 'handy ruler' below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

     |-----handy-ruler------------------------------------------------------|
knemo: knemo (The TDE Network Monitor)
knemo:
knemo: KNemo offers a network monitor similar to the one found in that other
knemo: operating system.  Supports Ethernet (including wireless) and PPP
knemo: connections, showing both incoming and outgoing traffic.
knemo: For every network interface it displays an icon in the Panel.
knemo:
knemo:
knemo: IMPORTANT: KNemo has to be started using
knemo: Trinity Control Center|Internet & Network|Network Monitor.
knemo:
" > $PKG/install/slack-desc
)


DOCS="AUTHORS ChangeLog* COPYING* README* TODO"

# Where do we look for sources?
SRCDIR=$(cd $(dirname $0); pwd)


TMP=${TMP:-/tmp/build}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SOURCE="$SRCDIR/${PRGNAM}-${VERSION}.tar.bz2"
SRCURL="http://tde-mirror.yosemite.net/trinity/releases/${VERSION}/applications/${PRGNAM}-${VERSION}.tar.bz2"

# You can use your own private machine.conf file to overrule machine defaults:
if [ -e $SRCDIR/machine.conf ]; then
  . $SRCDIR/machine.conf
elif [ -e /etc/slackbuild/machine.conf ]; then
  . /etc/slackbuild/machine.conf
else
  # Automatically determine the architecture we're building on:
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      armv7hl) export ARCH=$MARCH ;;
      armv6hl) export ARCH=$MARCH ;;
      arm*)    export ARCH=arm ;;
      # Unless $ARCH is already set, use uname -m for all other archs:
      *)       export ARCH=$MARCH ;;
    esac
  fi
  # Set CFLAGS/CXXFLAGS and LIBDIRSUFFIX:
  case "$ARCH" in
    i486)      SLKCFLAGS="-O2 -march=i486 -mtune=i686"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    x86_64)    SLKCFLAGS="-O2 -fPIC"
               SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
               ;;
    armv7hl)   SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    armv6hl)   SLKCFLAGS="-O2 -march=armv6 -mfpu=vfp -mfloat-abi=hard"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    *)         SLKCFLAGS=${SLKCFLAGS:-"O2"}
               SLKLDFLAGS=${SLKLDFLAGS:-""}; LIBDIRSUFFIX=${LIBDIRSUFFIX:-""}
               ;;
  esac
fi

case "$ARCH" in
    arm*)    TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)       TARGET=$ARCH-slackware-linux ;;
esac

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Save old umask and set to 0022:
_UMASK_=$(umask)
umask 0022

# Create working directories:
mkdir -p $OUTPUT        
mkdir -p $TMP/tmp-$PRGNAM 
mkdir -p $PKG            
rm -rf $PKG/*           
rm -rf $TMP/tmp-$PRGNAM/* 
rm -rf $OUTPUT/{checkout,configure,make,install,error,makepkg,patch}-$PRGNAM.log

# Source file availability:
if ! [ -f ${SOURCE} ]; then
  echo "Source '$(basename ${SOURCE})' not available yet..."
  # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
  [ -w "$SRCDIR" ] || SOURCE="$OUTPUT/$(basename $SOURCE)"
  if [ -f ${SOURCE} ]; then echo "Ah, found it!"; continue; fi
  if ! [ "x${SRCURL}" == "x" ]; then
    echo "Will download file to $(dirname $SOURCE)"
    wget -nv -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename ${SOURCE})' not available... aborting the build."
    exit 1
  fi
fi

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

cd $TMP/tmp-$PRGNAM
tar -xvf ${SOURCE}

cd applications
cd ${PRGNAM}

Options


# update admin for installed version of libtool
cp /$(grep -h ltmain.sh /var/log/packages/*) admin/
cp /$(grep -h libtool.m4 /var/log/packages/*) admin/libtool.m4.in

make -f admin/Makefile.common

chown -R root:root .
chmod -R u+w,go+r-w,a+rX-st .

mkdir -p build-${PRGNAM}
cd build-${PRGNAM}

# Configure the package
LDFLAGS="${SLKLDFLAGS}"
CFLAGS="${SLKCFLAGS}"
CXXFLAGS="${SLKCFLAGS}"
../configure \
   --prefix=${PREFIX} \
   --sysconfdir="/etc/trinity" \
   --mandir=${PREFIX}/man \
   --disable-rpath \
   --enable-closure

  make $NUMJOBS || exit 1
  make DESTDIR=$PKG install || exit 1
cd -


mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION || true
cat $SRCDIR/$(basename $0) > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install
SlackDesc

cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz} 
cd $OUTPUT
md5sum ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz} > ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz}.md5
cd -
cat $PKG/install/slack-desc | grep "^${PRGNAM}" > $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.txt

# Restore the original umask:
umask ${_UMASK_}
 
