#!/bin/sh
# Generated by Alien's SlackBuild Toolkit: http://slackware.com/~alien/AST
# Copyright 2009, 2010, 2011, 2012, 2013, 2014, 2015  Eric Hameleers, Eindhoven, Netherlands
# Copyright 2015-2016  Thorn Inurcide thorninurcide@gmail.com
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

PRGNAM=tde-i18n
VERSION=${VERSION:-R14.0.3}
BUILD=${BUILD:-1}

# Set the number of parallel jobs [-jn] to whatever your system will support
NUMJOBS=${NUMJOBS:-" -j10 "}

Options()
{
# build language packages for any of:
# af ar az be bg bn br bs ca cs csb cy da de el en_GB eo es et eu fa fi fr fy ga gl he hi hr hu is it ja kk km ko lt lv mk mn ms nb nds nl nn pa pl pt pt_BR ro ru rw se sk sl sr sr@Latn ss sv ta te tg th tr uk uz uz@cyrillic vi wa zh_CN zh_TW
#
CHOICE="de es fr it"
return
}


SlackDesc()
{
echo "
# HOW TO EDIT THIS FILE:
# The 'handy ruler' below makes it easier to edit a package description.  Line
# up the first '|' above the ':' following the base package name, and the '|'
# on the right side marks the last column you can put a character in.  You must
# make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':'.

${PRGNAM}-$lang|-----handy-ruler------------------------------------------------------|
${PRGNAM}-$lang: ${PRGNAM}-$lang
${PRGNAM}-$lang:
${PRGNAM}-$lang: Language support for TDE:
${PRGNAM}-$lang:
${PRGNAM}-$lang:              $(echo $Lang)
${PRGNAM}-$lang:
${PRGNAM}-$lang:
${PRGNAM}-$lang:
${PRGNAM}-$lang:
${PRGNAM}-$lang:
${PRGNAM}-$lang:
" > $PKG/install/slack-desc
}

# Where do we look for sources?
SRCDIR=$(cd $(dirname $0); pwd)

TMP=${TMP:-/tmp/build}
PKG=$TMP/package-${PRGNAM}
OUTPUT=${OUTPUT:-/tmp}

SOURCE="$SRCDIR/${PRGNAM}-${VERSION}.tar.bz2"
SRCURL="http://tde-mirror.yosemite.net/trinity/releases/${VERSION}/${PRGNAM}-${VERSION}.tar.bz2"

# You can use your own private machine.conf file to overrule machine defaults:
if [ -e $SRCDIR/machine.conf ]; then
  . $SRCDIR/machine.conf
elif [ -e /etc/slackbuild/machine.conf ]; then
  . /etc/slackbuild/machine.conf
else
  # Automatically determine the architecture we're building on:
  MARCH=$( uname -m )
  if [ -z "$ARCH" ]; then
    case "$MARCH" in
      i?86)    export ARCH=i486 ;;
      armv7hl) export ARCH=$MARCH ;;
      armv6hl) export ARCH=$MARCH ;;
      arm*)    export ARCH=arm ;;
      # Unless $ARCH is already set, use uname -m for all other archs:
      *)       export ARCH=$MARCH ;;
    esac
  fi
  # Set CFLAGS/CXXFLAGS and LIBDIRSUFFIX:
  case "$ARCH" in
    i486)      SLKCFLAGS="-O2 -march=i486 -mtune=i686"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    x86_64)    SLKCFLAGS="-O2 -fPIC"
               SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
               ;;
    armv7hl)   SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    armv6hl)   SLKCFLAGS="-O2 -march=armv6 -mfpu=vfp -mfloat-abi=hard"
               SLKLDFLAGS=""; LIBDIRSUFFIX=""
               ;;
    *)         SLKCFLAGS=${SLKCFLAGS:-"O2"}
               SLKLDFLAGS=${SLKLDFLAGS:-""}; LIBDIRSUFFIX=${LIBDIRSUFFIX:-""}
               ;;
  esac
fi

case "$ARCH" in
    arm*)    TARGET=$ARCH-slackware-linux-gnueabi ;;
    *)       TARGET=$ARCH-slackware-linux ;;
esac

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Save old umask and set to 0022:
_UMASK_=$(umask)
umask 0022

# Create working directories:
mkdir -p $OUTPUT
mkdir -p $TMP/tmp-${PRGNAM}
mkdir -p $PKG
rm -rf $PKG/*
rm -rf $TMP/tmp-${PRGNAM}/*
rm -rf $OUTPUT/{checkout,configure,make,install,error,makepkg,patch}-${PRGNAM}.log

# Source file availability:
if ! [ -f ${SOURCE} ]; then
  echo "Source '$(basename ${SOURCE})' not available yet..."
  # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
  [ -w "$SRCDIR" ] || SOURCE="$OUTPUT/$(basename $SOURCE)"
  if [ -f ${SOURCE} ]; then echo "Ah, found it!"; continue; fi
  if ! [ "x${SRCURL}" == "x" ]; then
    echo "Will download file to $(dirname $SOURCE)"
    wget -nv -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename ${SOURCE})' not available... aborting the build."
    exit 1
  fi
fi

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

Options

## the source unpacked is ~950MB, so to save on build space
## extract, build, and remove source for each language package one at a time

cd $TMP/tmp-${PRGNAM}
echo "Extracting the source archive(s) for ${PRGNAM}..."
tar xvf ${SOURCE} ${PRGNAM}/cmake
echo $CHOICE | sed 's| |\n|g' | while read lang
do
tar xvf ${SOURCE} ${PRGNAM}/${PRGNAM}-$lang

cd ${PRGNAM}

chown -R root:root .
chmod -R u+w,go+r-w,a+rX-st .

mkdir -p ${PRGNAM}-$lang/build
cd ${PRGNAM}-$lang/build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DBUILD_ALL="ON" \
    ..


  make ${NUMJOBS:-} || exit 1
  make DESTDIR=$PKG install || exit 1
cd -

# Add this to the doinst.sh:
mkdir -p $PKG/install
cat <<EOINS >> $PKG/install/doinst.sh
# Update the desktop database:
if [ -x usr/bin/update-desktop-database ]; then
  chroot . /usr/bin/update-desktop-database usr/share/applications > /dev/null 2>&1
fi

# Update hicolor theme cache:
if [ -d usr/share/icons/hicolor ]; then
  if [ -x /usr/bin/gtk-update-icon-cache ]; then
    chroot . /usr/bin/gtk-update-icon-cache -f -t usr/share/icons/hicolor 1> /dev/null 2> /dev/null
  fi
fi

EOINS

mkdir -p $PKG/usr/doc/${PRGNAM}-$VERSION
#cp -a $DOCS $PKG/usr/doc/${PRGNAM}-$VERSION || true
cat $SRCDIR/$(basename $0) > $PKG/usr/doc/${PRGNAM}-$VERSION/${PRGNAM}-${lang}.SlackBuild
chown -R root:root $PKG/usr/doc/${PRGNAM}-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/install
# extract the name of the language from the source text - a bit messy but there is no standard format
Lang=$(grep Language-Team: $TMP/tmp-$PRGNAM/$PRGNAM/tde-i18n-${lang}/messages/tdebase/*.po|sort -k2 | sed -e 's|Team: |\n|' -e 's| <|\n|' -e 's|akh\\n"|akh|' -e 's|an S|#|' | grep "[A-Z][a-z][a-z]*$"|head -n 1)
[[ "$lang" == "pt" ]] && Lang="Portuguese"
[[ "$lang" == "fy" ]] && Lang="Frisian"
SlackDesc

ARCH="noarch"
cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PRGNAM}-${lang}-${VERSION}-${ARCH}-${BUILD}.${PKGTYPE:-txz} 
cd $OUTPUT
md5sum ${PRGNAM}-${lang}-${VERSION}-${ARCH}-${BUILD}.${PKGTYPE:-txz} > ${PRGNAM}-${lang}-${VERSION}-${ARCH}-${BUILD}.${PKGTYPE:-txz}.md5
cd -
cat $PKG/install/slack-desc | grep "^${PRGNAM}" | grep -v handy > $OUTPUT/${PRGNAM}-${lang}-${VERSION}-${ARCH}-${BUILD}.txt

# Restore the original umask:
umask ${_UMASK_}

rm -rf $PKG/*
cd $TMP/tmp-${PRGNAM}
rm -rf ${PRGNAM}/${PRGNAM}-${lang}

done