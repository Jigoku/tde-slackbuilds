The individual TDE apps can be cloned from Trinity git, so the build is set up to do that - except for individual language packs of tde-i18n. The whole tde-i18n download is ~1x10^6 bytes, so to reduce that, wget is used to download individual tde-i18n-ab_CD packs as they are not git repositories.

Once any git repository has been cloned, further downloads are updates only[*].

This gives the best options - only fetching what is needed, and incremental updates.

The git repositories are cloned to 'src/cgit', arranged in this tree format ignoring whether they are in Core, Deps, etc.

src
:
└── cgit
    ├── admin
    ├── cmake
    :
    ├── tqt3
    :
    ├── tdelibs
    :
    ├── tdei18n
    :   └── cgit
            └── tde-i18n
                └── plain
                    ├── tde-i18n-en_GB
                    └── tde-i18n-ru

For the build, these repositories are copied to the build area where the R14.0.4 archives would otherwise be extracted. admin & cmake are also always copied, and libltdl and libtdevnc where they're needed.

This has resulted in most of the modifications being in the main scripts, BUILD-TDE.sh and get-source.sh [in getsource_fn and untar_fn]. tde-i18n.SlackBuild had to be modified because it doesn't use untar_fn. Some other *.SlackBuild modifications are work-arounds to accommodate the patching already included in the git sources.

All packages in the BUILD-TDE.sh " TDE Packages Selection " have now been tested and build using gcc - except for kdbusnotification:

	In file included from daemon.moc.cpp:9:0:
	../../../src/daemon/daemon.h:25:42: error: expected initializer before ‘:’ token
	 class TDEUI_EXPORT NotificationContainer : public TDEPassivePopupStackContainer
	                                          ^


[*] I'm sure that checking timestamps with wget did work when I set it up, but it doesn't now as the server doesn't seem to be delivering that information. The consequence is that if tde-i18n-$lang is a part of the build after its initial download, it will be downloaded again. As the latest update was a year ago, once built, there will probably be no need to do so again and so tde-i18n for a particular language will probably only be run once. On that basis I don't see this being a significant issue.
