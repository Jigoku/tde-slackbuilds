Build TDE [Trinity Desktop Environment] for Slackware 14.2 or current on i586+, x86_64, or Raspberry Pi3 [see README-Raspberry-Pi3.md].

Run ./BUILD-TDE.sh - a dialog based script with a series of screens for user input. Build the release versions R14.0.4/5 from tar archives or the development version from trinitydesktop cgit.

The default is to install the built packages which is necessary initially for the required packages and for some interdependencies [example tdesdk requires tdepim] -> run 'INST=0 ./BUILD-TDE.sh' to build only.

NEW:
There is a work-in-progress for cross compiling TDE for the Raspberry Pi3 based on these scripts - see the html page in the gh-pages branch or @ https://ray-v.github.io/tde-slackbuilds/cross-compiling-TDE-for-the-RPi3.html

=============================================================

Any package, or set of packages, can be built by running BUILD-TDE.sh and selecting them from the 'TDE Packages Selection' screen.
The TDE mandatory packages can be pre-selected.
Some packages also require other packages to be pre-installed - see notes at the bottom of the dialog screen.

The directory structure for the SlackBuild scripts is in line with the Trinity source repositories:
Deps [dependencies/]
Core []
Libs [libraries/]
Apps [applications/]

Other directories are:
Misc - for non-Trinity package builds
src - to hold all the source tarballs, either pre-downloaded or downloaded during the build.

Other scripts:
get-source.sh - a chunk of common code for the SBs - used for getting the source archive, setting FLAGS, creating build directories.

There is an override in the Misc SlackBuilds for non-trinity source archive URLs. Non-trinity builds have been included where a TDE package requires a dependency that is not in Slackware. Or, where it might be an alternative to a TDE package.

Required packages for a basic working TDE are:
  Deps/tqt3
  Deps/tqtinterface
  Deps/arts
  Deps/dbus-tqt
  Deps/dbus-1-tqt
  Deps/tqca-tls
  Deps/libart_lgpl
  Core/tdelibs
  Core/tdebase

i18n support [locale and html/help docs] in the packages is restricted to whatever is selected in BUILD-TDE.sh and, of that, to whatever is available in the package source.

TDM may need some manual setting up - see Core/tdebase/README, which can also be viewed while running BUILD-TDE.sh if tdebase is selected.

See https://wiki.trinitydesktop.org/How_to_Build_TDE_Core_Modules for more information

=========================================================
Building the development version from git sources

The individual TDE apps can be cloned from Trinity git, so the build is set up to do that - except for individual language packs of tde-i18n. The whole tde-i18n download is ~1x10^6 bytes, so to reduce that, wget is used to download individual tde-i18n-$lang packs as they are not git repositories.

Once any git repository has been cloned, further downloads are updates only[1].

This gives the best options - only fetching what is needed, and incremental updates.

The git repositories are cloned to 'src/cgit'


KNOWN-ISSUES
[1] The i18n downloads with wget can't be updated because cgit produces 'current time' timestamps. The consequence is that if tde-i18n-$lang is a part of the build after its initial download, it will be downloaded again. As the latest update was a year ago, once built, there will probably be no need to do so again and so tde-i18n for a particular language will probably only be run once. On that basis I don't see this being a significant issue.

[2] If Slackware's KDE is installed as well as TDE, there might be an issue with TDE launching the KDE4 Konsole and attempting to use it's ark. To fix, adjust the PATH so that the TDE directories come before /usr/share/bin.

[3] The Misc directory contains SlackBuilds for software that might already be installed from other sources. Please check because any misc builds selected here could overwrite them.
